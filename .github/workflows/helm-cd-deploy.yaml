name: Deploy Helm Chart to Kubernetes

on:
  workflow_run:
    workflows: ["Publish Helm Chart to OCI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }} # Add KUBECONFIG as secret in Github

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Helm Registry Login
        run: |
          echo '${{ secrets.DOCKER_CONFIG }}' | base64 -d > ~/.docker/config.json
          helm registry login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} registry-1.docker.io

      - name: Download ORAS CLI
        run: |
          ORAS_VERSION=1.2.2
          curl -LO https://github.com/oras-project/oras/releases/download/v${ORAS_VERSION}/oras_${ORAS_VERSION}_$(uname -s)_amd64.tar.gz
          tar -zxvf oras_${ORAS_VERSION}_$(uname -s)_amd64.tar.gz
          sudo mv oras /usr/local/bin/

      - name: ORAS Registry Login
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login registry-1.docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin    

      - name: Extract chart version from Chart.yaml # Store it as GITHUB_ENV to reference later with ${{ env.CHART_VERSION }}
        run: |
          echo "CHART_VERSION=$(yq e '.version' my-chart/Chart.yaml | tr -d '\"')" >> $GITHUB_ENV

      - name: Pull Helm Chart from OCI using ORAS
        run: |
          echo "Chart Version: ${{ env.CHART_VERSION }}"
          oras pull registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-chart:${{ env.CHART_VERSION }}
          ls -l # Monitor *.tgz name and version

#      - name: List manifest directory contents
#        run: |
#          echo "Current working directory: $(pwd)"
#          echo "Listing contents of ./k8s/"
#          ls -l ./k8s/

      - name: Deploy Helm chart to Kubernetes
          uses: azure/k8s-deploy@v4
          with:
            action: deploy
            helmChartPath: "./my-chart-${{ env.CHART_VERSION }}.tgz"
            releaseName: "my-release"
            namespace: "default"
            overrideValues: "image.tag=${{ env.CHART_VERSION }}"
            createNamespace: true
            pull-images: true
            strategy: basic
            route-method: service
            version-switch-buffer: 0
            traffic-split-method: pod
            percentage: 0
            force: false
            annotate-namespace: true
            private-cluster: false
            skip-tls-verify: false
