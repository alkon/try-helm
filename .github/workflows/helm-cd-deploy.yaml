name: Deploy Helm Chart to Kubernetes

on:
  workflow_run:
    workflows: ["Publish Helm Chart to OCI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }} # Add KUBECONFIG as secret in Github

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Helm Registry Login
        run: |
          echo '${{ secrets.DOCKER_CONFIG }}' | base64 -d > ~/.docker/config.json
          helm registry login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} registry-1.docker.io

      - name: Download ORAS CLI
        run: |
          ORAS_VERSION=1.2.2
          curl -LO https://github.com/oras-project/oras/releases/download/v${ORAS_VERSION}/oras_${ORAS_VERSION}_$(uname -s)_amd64.tar.gz
          tar -zxvf oras_${ORAS_VERSION}_$(uname -s)_amd64.tar.gz
          sudo mv oras /usr/local/bin/

      - name: ORAS Registry Login
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login registry-1.docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin    

      - name: Pull Helm Chart from OCI using ORAS
        run: |
          CHART_VERSION=$(yq e '.version' my-chart/Chart.yaml | tr -d '"')
          echo "Chart Version: $CHART_VERSION"
          oras pull registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-chart:$CHART_VERSION
          ls -l # You should see the my-chart-v0.1.1.tgz file (or similar)
#      - name: Pull Helm Chart from OCI
#        run: |
#            CHART_VERSION=$(yq e '.version' my-chart/Chart.yaml | tr -d '"')
#            echo "Chart Version: $CHART_VERSION" #added for debug
#            helm pull oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-chart:${CHART_VERSION}  --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }}
#            ls -l

      - name: Install/Upgrade Helm Release
        run: |
          helm upgrade --install my-release ./my-chart-$CHART_VERSION.tgz \
            --namespace default --create-namespace \
            --set image.tag=$CHART_VERSION